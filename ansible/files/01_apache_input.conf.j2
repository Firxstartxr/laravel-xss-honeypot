input {
    file {
        path => "{{home_folder}}/honeypot/storage/logs/laravel.log"
        start_position => "beginning"
    }
}
filter {
    if "UpdatedUserName" in [message] {
        grok {
            match => { 
                "message" => ["\[%{TIMESTAMP_ISO8601:timestamp}\] %{DATA:unwanted}: /%{USERNAME:username} %{DATA:unwanted} %{IP:IP_address} %{DATA:unwanted} %{URI:url} %{DATA:unwanted} /%{DATA:event} /%{GREEDYDATA:user}"] 
                }           
        }     
    }
    else if "[ChallengeCompleted]" in [message] {
        grok {
            match => { 
                "message" => ["\[%{TIMESTAMP_ISO8601:timestamp}\] %{DATA:unwanted}: /%{USERNAME:username} %{DATA:unwanted} %{IP:IP_address} %{DATA:unwanted} %{URI:url} %{DATA:unwanted} \[%{DATA:challengecompleted}\] \[%{GREEDYDATA:challengename}\]"] 
            }           
        }
    }
    else if "[AttemptedBrokenAccessControl]" in [message] {
        grok {
            match => { 
                "message" => ["\[%{TIMESTAMP_ISO8601:timestamp}\] %{DATA:unwanted}: /%{USERNAME:username} %{DATA:unwanted} %{IP:IP_address} %{DATA:unwanted} %{URI:url} %{DATA:unwanted} \[%{DATA:attempedchallenge}\] %{GREEDYDATA:payload}"] 
            }           
        }
    }
    else if "[AttemptedImageUploadBypass]" in [message] {
        grok {
            match => { 
                "message" => ["\[%{TIMESTAMP_ISO8601:timestamp}\] %{DATA:unwanted}: /%{USERNAME:username} %{DATA:unwanted} %{IP:IP_address} %{DATA:unwanted} %{URI:url} %{DATA:unwanted} \[%{DATA:attempedchallenge}\] %{GREEDYDATA:payload}"] 
            }           
        }
    }
    else if "[AttemptedMassAssignment]" in [message] {
        grok {
            match => { 
                "message" => ["\[%{TIMESTAMP_ISO8601:timestamp}\] %{DATA:unwanted}: /%{USERNAME:username} %{DATA:unwanted} %{IP:IP_address} %{DATA:unwanted} %{URI:url} %{DATA:unwanted} \[%{DATA:attempedchallenge}\] %{GREEDYDATA:payload}"] 
            }           
        }
    }
    else if "[AttemptedSQLi]" in [message] {
        grok {
            match => { 
                "message" => ["\[%{TIMESTAMP_ISO8601:timestamp}\] %{DATA:unwanted}: /%{USERNAME:username} %{DATA:unwanted} %{IP:IP_address} %{DATA:unwanted} %{URI:url} %{DATA:unwanted} \[%{DATA:attempedchallenge}\] %{GREEDYDATA:payload}"] 
            }           
        }
    }
    else if "[AttemptedXSS]" in [message] {
        grok {
            match => { 
                "message" => ["\[%{TIMESTAMP_ISO8601:timestamp}\] %{DATA:unwanted}: /%{USERNAME:username} %{DATA:unwanted} %{IP:IP_address} %{DATA:unwanted} %{URI:url} %{DATA:unwanted} \[%{DATA:attempedchallenge}\] %{GREEDYDATA:payload}"] 
            }           
        }
    }
    else if "[achievedchallenge]" in [message] {
        grok {
            match => { 
                "message" => ["\[%{TIMESTAMP_ISO8601:timestamp}\] %{DATA:unwanted}: /%{USERNAME:username} %{DATA:unwanted} %{IP:IP_address} %{DATA:unwanted} %{URI:url} %{DATA:unwanted} \[%{DATA:achievedchallenge}\] %{GREEDYDATA:payload}"] 
            }           
        }
    }
    else if "AchievedBrokenAccessControl" in [message] {
        grok {
            match => { 
                "message" => ["\[%{TIMESTAMP_ISO8601:timestamp}\] %{DATA:unwanted}: /%{USERNAME:username} %{DATA:unwanted} %{IP:IP_address} %{DATA:unwanted} %{URI:url} %{DATA:unwanted} --%{GREEDYDATA:achievedchallenge}"] 
            }           
        }
    }
    else {
        grok {
            match => { 
                "message" => ["\[%{TIMESTAMP_ISO8601:timestamp}\] %{DATA:unwanted}: /%{USERNAME:username} %{DATA:unwanted} %{IP:IP_address} %{DATA:unwanted} %{URI:url} %{DATA:unwanted} /%{GREEDYDATA:event}"] 
            }           
        }
    }
}
output {
    elasticsearch {
        hosts => ["localhost:9200"]
        index => "newhoneypot"
        user => 'elastic'
        password => '{{kibana_password}}'
    }
}